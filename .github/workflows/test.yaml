---
# @see https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
#
# Services feature of GitHub Actions isn't fit for our purposes for testing.
# We cannot overwrite arguments of ENTRYPOINT.
# @see https://docs.docker.com/engine/reference/commandline/create/#options
#
# @see https://github.community/t/how-to-trigger-an-action-on-push-or-pull-request-but-not-both/16662
name: Test
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  lint:
    name: Lint
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
      - name: Run rubocop
        run: bundle exec rubocop
  main:
    name: Main
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        redis: ['7.0.1', '6.2.7']
        ruby: ['3.1', '3.0', '2.7']
        driver: ['ruby', 'hiredis']
        docker: ['docker-compose.yaml', 'docker-compose.ssl.yaml']
    runs-on: ubuntu-latest
    env:
      REDIS_VERSION: ${{ matrix.redis }}
      REDIS_CONNECTION_DRIVER: ${{ matrix.driver }}
      DOCKER_COMPOSE_FILE: ${{ matrix.docker }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
      - name: Pull Docker images
        run: docker pull redis:$REDIS_VERSION
      - name: Run containers
        run: docker compose -f $DOCKER_COMPOSE_FILE up -d
      - name: Wait for Redis cluster to be ready
        run: bundle exec rake wait
      - name: Print containers
        run: docker compose -f $DOCKER_COMPOSE_FILE ps
      - name: Run minitest
        run: bundle exec rake test
      - name: Stop containers
        run: docker compose -f $DOCKER_COMPOSE_FILE down
  multiple-replicas:
    name: Multiple Replicas
    timeout-minutes: 15
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      REDIS_VERSION: '7.0.1'
      REDIS_REPLICA_SIZE: '2'
      DOCKER_COMPOSE_FILE: 'docker-compose.replica.yaml'
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
      - name: Pull Docker images
        run: docker pull redis:$REDIS_VERSION
      - name: Run containers
        run: docker compose -f $DOCKER_COMPOSE_FILE up -d
      - name: Wait for Redis cluster to be ready
        run: bundle exec rake wait
      - name: Print containers
        run: docker compose -f $DOCKER_COMPOSE_FILE ps
      - name: Run minitest
        run: bundle exec rake test
      - name: Stop containers
        run: docker compose -f $DOCKER_COMPOSE_FILE down
  cluster-state:
    name: Cluster State
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        redis: ['7.0.1', '6.2.7']
    runs-on: ubuntu-latest
    env:
      REDIS_VERSION: ${{ matrix.redis }}
      REDIS_REPLICA_SIZE: '2'
      DOCKER_COMPOSE_FILE: 'docker-compose.replica.yaml'
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
      - name: Pull Docker images
        run: docker pull redis:$REDIS_VERSION
      - name: Run containers
        run: docker compose -f $DOCKER_COMPOSE_FILE up -d
      - name: Wait for Redis cluster to be ready
        run: bundle exec rake wait
      - name: Print containers
        run: docker compose -f $DOCKER_COMPOSE_FILE ps
      - name: Run minitest
        run: bundle exec rake test_cluster_state
      - name: Stop containers
        run: docker compose -f $DOCKER_COMPOSE_FILE down
  cluster-broken:
    name: Cluster Broken
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        redis: ['7.0.1', '6.2.7']
    runs-on: ubuntu-latest
    env:
      REDIS_VERSION: ${{ matrix.redis }}
      DOCKER_COMPOSE_FILE: 'docker-compose.yaml'
      RESTART_POLICY: 'no'
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
      - name: Pull Docker images
        run: docker pull redis:$REDIS_VERSION
      - name: Run containers
        run: docker compose -f $DOCKER_COMPOSE_FILE up -d
      - name: Wait for Redis cluster to be ready
        run: bundle exec rake wait
      - name: Print containers
        run: docker compose -f $DOCKER_COMPOSE_FILE ps
      - name: Run minitest
        run: bundle exec rake test_cluster_broken
      - name: Stop containers
        run: docker compose -f $DOCKER_COMPOSE_FILE down
  cluster-scale:
    name: Cluster Scale
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        redis: ['7.0.1', '6.2.7']
    runs-on: ubuntu-latest
    env:
      REDIS_VERSION: ${{ matrix.redis }}
      DOCKER_COMPOSE_FILE: 'docker-compose.scale.yaml'
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
      - name: Pull Docker images
        run: docker pull redis:$REDIS_VERSION
      - name: Run containers
        run: docker compose -f $DOCKER_COMPOSE_FILE up -d
      - name: Wait for Redis cluster to be ready
        run: bundle exec rake wait
      - name: Print containers
        run: docker compose -f $DOCKER_COMPOSE_FILE ps
      - name: Run minitest
        run: bundle exec rake test_cluster_scale
      - name: Stop containers
        run: docker compose -f $DOCKER_COMPOSE_FILE down
  benchmark:
    name: Benchmark
    timeout-minutes: 15
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      REDIS_VERSION: '7.0.1'
      DOCKER_COMPOSE_FILE: 'docker-compose.yaml'
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
      - name: Pull Docker images
        run: docker pull redis:$REDIS_VERSION
      - name: Run containers
        run: docker compose -f $DOCKER_COMPOSE_FILE up -d
      - name: Wait for Redis cluster to be ready
        run: bundle exec rake wait
      - name: Print containers
        run: docker compose -f $DOCKER_COMPOSE_FILE ps
      - name: Run minitest
        run: bundle exec rake bench
      - name: Stop containers
        run: docker compose -f $DOCKER_COMPOSE_FILE down
