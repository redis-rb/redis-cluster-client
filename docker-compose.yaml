---
services:
  node1: &node
    image: "redis:${REDIS_VERSION:-7}"
    command: >
      redis-server
      --maxmemory            64mb
      --maxmemory-policy     allkeys-lru
      --appendonly           yes
      --cluster-enabled      yes
      --cluster-config-file  nodes.conf
      --cluster-node-timeout 5000
    restart: "${RESTART_POLICY:-always}"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: "7s"
      timeout: "5s"
      retries: 10
    ports:
      - "6379:6379"
  node2:
    <<: *node
    ports:
      - "6380:6379"
  node3:
    <<: *node
    ports:
      - "6381:6379"
  node4:
    <<: *node
    ports:
      - "6382:6379"
  node5:
    <<: *node
    ports:
      - "6383:6379"
  node6:
    <<: *node
    ports:
      - "6384:6379"
  clustering:
    image: "redis:${REDIS_VERSION:-7}"
    command: >
      bash -c "apt-get update > /dev/null
      && apt-get install --no-install-recommends --no-install-suggests -y dnsutils > /dev/null
      && rm -rf /var/lib/apt/lists/*
      && yes yes | redis-cli --cluster create
      $$(dig node1 +short):6379
      $$(dig node2 +short):6379
      $$(dig node3 +short):6379
      $$(dig node4 +short):6379
      $$(dig node5 +short):6379
      $$(dig node6 +short):6379
      --cluster-replicas 1"
    depends_on:
      node1:
        condition: service_healthy
      node2:
        condition: service_healthy
      node3:
        condition: service_healthy
      node4:
        condition: service_healthy
      node5:
        condition: service_healthy
      node6:
        condition: service_healthy
